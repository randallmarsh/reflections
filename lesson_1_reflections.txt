How did viewing a diff between two versions of a file help you see the bug that was introduced?

It eliminated the need to go through the files line by line. The command brought up chunks of code to examine.
Only chunks with different code in them were displayed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Not only version control, but a repository of routines for current and future projects.
It would also make it easier to complex revisions.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?

I prefer to control the size and number of changes from version to version. The versions can be kept to single concepts.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?

Git is designed for coding. Other repositories may be more documents or spreadsheets. 

How can you use the commands git log and git diff to view the history of files?

log shows commits and notes to what was changed. diff shows what the changes where. Great troubleshooting tool.

How might using version control make you more confident to make changes that could break something?

Neither increases or decreases.

Now that you have your workspace set up, what do you want to try using Git for?
Sure.




